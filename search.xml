<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>剑指offer 22</title>
      <link href="/2020/07/29/arithmetic2/"/>
      <url>/2020/07/29/arithmetic2/</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。例如，一个链表有6个节点，从头节点开始，它们的值依次是1、2、3、4、5、6。这个链表的倒数第3个节点是值为4的节点。</p><a id="more"></a><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><blockquote><p>给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 k = 2.<br>返回链表 4-&gt;5.</p></blockquote><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p><img src="/2020/07/29/arithmetic2/1.png" alt loading="lazy"></p><ol><li><strong>初始化：</strong> 前指针 <code>former</code> 、后指针 <code>latter</code> ，双指针都指向头节点 head​ </li><li><strong>构建双指针距离：</strong> 前指针 <code>former</code> 先向前走 kk 步（结束后，双指针 former 和 latter 间相距 kk 步）</li><li><strong>双指针共同移动：</strong> 循环中，双指针 <code>former</code> 和<code>latter</code> 每轮都向前走一步，直至 <code>former</code> 走过链表 尾节点 时跳出（跳出后， <code>latter</code> 与尾节点距离为 k-1k−1，即<code>latter</code>指向倒数第 kk 个节点）</li><li><strong>返回值：</strong> 返回 <code>latter</code> 即可</li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><pre class=" language-java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ListNode</span> <span class="token punctuation">{</span>    #创建链表      <span class="token keyword">int</span> val<span class="token punctuation">;</span>      ListNode next<span class="token punctuation">;</span>      <span class="token function">ListNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> val <span class="token operator">=</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> ListNode <span class="token function">getKthFromEnd</span><span class="token punctuation">(</span>ListNode head<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ListNode former <span class="token operator">=</span> head<span class="token punctuation">,</span> latter <span class="token operator">=</span> head<span class="token punctuation">;</span>    #定义前指针，后指针        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    #前指针后移k位            <span class="token keyword">if</span><span class="token punctuation">(</span>former <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token keyword">return</span> null<span class="token punctuation">;</span>            former <span class="token operator">=</span> former<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>former <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>    #前后指针一起后移，直至前指针为null            former <span class="token operator">=</span> former<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            latter <span class="token operator">=</span> latter<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span>  latter<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 算法 </tag>
            
            <tag> 剑指offer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面试知识汇总</title>
      <link href="/2020/07/28/java/"/>
      <url>/2020/07/28/java/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-基本功"><a href="#Java-基本功" class="headerlink" title="Java 基本功"></a>Java 基本功</h1><h2 id="Java入门"><a href="#Java入门" class="headerlink" title="Java入门"></a>Java入门</h2><h3 id="Java语言有哪些特点"><a href="#Java语言有哪些特点" class="headerlink" title="Java语言有哪些特点?"></a>Java语言有哪些特点?</h3><ul><li>简单易学；</li><li>面向对象（<font color="#0099ff">封装，继承，多态</font>）；</li><li>平台无关性（Java虚拟机实现平台无关性）；</li><li>可靠性；</li><li>安全性；</li><li>支持多线程；</li><li>支持网络编程并且很方便；</li><li>编译和解释并存；</li></ul><hr><h3 id="Java-和-C-的区别"><a href="#Java-和-C-的区别" class="headerlink" title="Java 和 C++ 的区别"></a>Java 和 C++ 的区别</h3><ul><li>都是面向对象语言，都支持封装、继承和多态</li><li>Java不提供指针来直接访问内存，程序内存更加安全</li><li>Java的类是单继承的，C++支持多重继承；虽然Java的类不可以多继承，但是接口可以多继承</li><li>Java有自动内存管理机制，不需要程序员手动释放无用内存</li><li><strong>在C语言中，字符串或字符数组最后都会有一个额外的字符‘\0’来表示结束。但是，Java语言中没有结束符这个概念</strong></li></ul><hr><h3 id="什么是-Java-程序的主类-应用程序和小程序的主类有何不同"><a href="#什么是-Java-程序的主类-应用程序和小程序的主类有何不同" class="headerlink" title="什么是 Java 程序的主类 应用程序和小程序的主类有何不同?"></a>什么是 Java 程序的主类 应用程序和小程序的主类有何不同?</h3><p>一个程序中可以有很多个类，但只能有一个类是主类。在Java应用程序中，这个主类是指包含<font color="#0099ff">main()</font> 方法的类。而在Java小程序中，这个主类是一个继承自系统类JApplet或Applet的子类。应用程序的主类不一定要求是public类，但小程序的主类要求必须是public类。主类是Java程序执行的入口点。</p><hr>]]></content>
      
      
      <categories>
          
          <category> Java面试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指offer 58 - II</title>
      <link href="/2020/07/27/arithmetic1/"/>
      <url>/2020/07/27/arithmetic1/</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串”abcdefg”和数字2，该函数将返回左旋转两位得到的结果”cdefgab”。</p><a id="more"></a><h1 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h1><blockquote><p>输入：s = “abcdef”, k = 2<br>输出：”cdefgab”</p></blockquote><h1 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h1><blockquote><p>输入：s = “lrloseumgh”, k = 6<br>输出：”umghlrlose”</p></blockquote><h1 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h1><ul><li>1 &lt;= k &lt; s.length &lt;= 10000</li></ul><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><pre class=" language-java"><code class="language-java">    <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> String <span class="token function">reverseLeftWords</span><span class="token punctuation">(</span>String s<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 算法 </tag>
            
            <tag> 剑指offer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>岳阳楼记</title>
      <link href="/2020/07/22/example/"/>
      <url>/2020/07/22/example/</url>
      
        <content type="html"><![CDATA[<p>庆历四年春，滕子京谪守巴陵郡。越明年，政通人和，百废具兴。乃重修岳阳楼，增其旧制，刻唐贤今人诗赋于其上。属予作文以记之。</p><a id="more"></a><p>予观夫巴陵胜状，在洞庭一湖。衔远山，吞长江，浩浩汤汤，横无际涯；朝晖夕阴，气象万千。此则岳阳楼之大观也，前人之述备矣。然则北通巫峡，南极潇湘，迁客骚人，多会于此，览物之情，得无异乎？</p><p>若夫淫雨霏霏，连月不开，阴风怒号，浊浪排空；日星隐曜，山岳潜形；商旅不行，樯倾楫摧；薄暮冥冥，虎啸猿啼。登斯楼也，则有去国怀乡，忧谗畏讥，满目萧然，感极而悲者矣。</p><p>至若春和景明，波澜不惊，上下天光，一碧万顷；沙鸥翔集，锦鳞游泳；岸芷汀兰，郁郁青青。而或长烟一空，皓月千里，浮光跃金，静影沉璧，渔歌互答，此乐何极！登斯楼也，则有心旷神怡，宠辱偕忘，把酒临风，其喜洋洋者矣。</p><p>嗟夫！予尝求古仁人之心，或异二者之为，何哉？不以物喜，不以己悲；居庙堂之高则忧其民；处江湖之远则忧其君。是进亦忧，退亦忧。然则何时而乐耶？其必曰“先天下之忧而忧，后天下之乐而乐”乎。噫！微斯人，吾谁与归？</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
